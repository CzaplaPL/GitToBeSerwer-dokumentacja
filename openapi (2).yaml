openapi: 3.0.1
info:
  title: Git2BeFit
  description: ''
  version: 1.0.0
servers:
  - url: 'https://77.55.236.227:8443'
tags:
  - name: user
    description: Operacje na użytkowniku
paths:
  /user/login/facebook:
    post:
      tags:
        - user
      summary: Logowanie przez FB
      description: ''
      operationId: loginWithFacebook
      requestBody:
        description: 'Należy przesłać do serwera aplikacji token udostępniony przez Facebook'
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/APIAuthModel'
        required: true
      responses:
        '200':
          description: ''
          headers:
            Authorization:
              description: JWT token dostępu do API serwera
              schema:
                type: string
            email:
              description: email z tokena FACEBOOK
              schema:
                type: string
            idUser: 
              description: ID użytkownika 
              schema:
                type: integer
        '400':
          description: Token nie przeszedł walidacji Facebooka
  /user/login/google:
    post:
      tags:
        - user
      summary: Logowanie przez Google
      description: ''
      operationId: loginWithGoogle
      requestBody:
        description: 'Należy przesłać do serwera aplikacji token udostępniony przez Google'
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/APIAuthModel'
        required: true
      responses:
        '200':
          description: ''
          headers:
            Authorization:
              description: JWT token dostępu do API serwera
              schema:
                type: string
        '400':
          description: Token nie przeszedł walidacji Google
  /user/signup:
    post:
      tags:
        - user
      summary: Rejsestracja
      description: ''
      operationId: signup
      requestBody:
        description: >-
          Hasło - wymagane conajmniej jedna( duża, mała litera, cyfra, znak
          specjalny) min. 8 znaków
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserAuthModel'
        required: true
      responses:
        '201':
          description: Utworzono pomyślnie
        '400':
          description: ''
        '409':
          description: |
            [weak password] - hasło nie pasuje do wyrażenia,

            [bad email] - email nie ma struktury maila, 

            [duplicate entry] - podany email istnieje w bazie
          headers:
            Cause:
              description: 'W zależności od błędu wartość z [...]'
              schema:
                type: string
  /user/login:
    post:
      tags:
        - user
      summary: Logowanie przez aplikację
      description: ''
      operationId: login
      requestBody:
        description: >-
          Hasło - wymagane conajmniej jedna( duża, mała litera, cyfra, znak
          specjalny) min. 8 znaków
        content:
          '':
            schema:
              $ref: '#/components/schemas/UserAuthModel'
        required: true
      responses:
        '200':
          description: Znaleziono
          headers:
            Authorization:
              description: JWT token dostępu do API serwera
              schema:
                type: string
        '403':
          description: 'Nie udane logowanie'
  /user/{id}:
    get:
      tags:
        - user
      summary: Pobieranie użytkownika przez ID
      description: ''
      operationId: getUser
      parameters:
      - name: "Authorization"
        description: "JWT token "
        in: header
        required: true
        schema: 
          type: string
      - name: id
        in: path
        description: "ID użytkownika którego informacje chcemy pobrać"
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Znaleziono
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: 'Nie znaleziono użytkownika o takim email'
    delete:
      tags:
        - user
      summary: Pobieranie użytkownika przez ID
      description: ''
      operationId: deleteUser
      parameters:
      - name: "Authorization"
        description: "JWT token "
        in: header
        required: true
        schema: 
          type: string
      - name: id
        in: path
        description: "ID użytkownika którego chcemy usunąć"
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: 'Usunięto'
        '404':
          description: 'Nie znaleziono użytkownika o takim id'
  /user/search/{email}:
    get:
      tags:
        - user
      summary: Pobieranie użytkownika przez email
      description: ''
      operationId: getUserInfo
      parameters:
      - name: "Authorization"
        description: "JWT token "
        in: header
        required: true
        schema: 
          type: string
      - name: email
        in: path
        description: "email użytkownika którego informacje chcemy pobrać"
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Utworzono pomyślnie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: 'Nie znaleziono użytkownika o takim ID'
  /user/{id}/password-update:
    post:
      tags:
        - user
      summary: Zmiana hasła użytkownika o podanym ID
      description: ''
      operationId: passwordUpdate
      requestBody:
        description: |
          actualPassword - hasło które posiada użytkownik
          
          newPassword - nowe hasło
        content:
          '':
            schema:
              $ref: '#/components/schemas/PasswordUpdateForm'
        required: true
      parameters:
      - name: "Authorization"
        description: "JWT token "
        in: header
        required: true
        schema: 
          type: string
      - name: id
        in: path
        description: "ID użytkownika którego informacje chcemy pobrać"
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '404':
          description: 'Nie znaleziono użytkownika o takim id'
        '409':
          description: |
            [weak password] - hasło nie pasuje do wyrażenia,

            [bad password] - podany email istnieje w bazie
          headers:
            Cause:
              description: 'W zależności od błędu wartość z [...]'
              schema:
                type: string
  /user/remind-password/{email}:
    post:
      tags:
        - user
      summary: Wysłanie nowego hasła na email
      description: ''
      operationId: remindPassword
      parameters:
      - name: email
        in: path
        description: "email użytkownika którego hasło chcemy przypomnieć"
        required: true
        schema:
          type: string
      responses:
        '200':
          description: 'wysłano maila'
        '404':
          description: 'nie ma takiego maila w bazie'
        '409':
          description: 'jeśli hasło jest nieprawidłowe lub podany email jest już w bazie'
        '424':
          description: 'błąd w wysyłaniu maila'
  /user/{id}/email-update: 
    put:
      tags:
        - user
      summary: Zmiana emaila użytkownika o podanym ID
      description: ''
      operationId: emailUpdate
      requestBody:
        description: |
          email - nowy email
          
          password - hasło użytkownika
        content:
          '':
            schema:
              $ref: '#/components/schemas/UserAuthModel'
        required: true
      parameters:
      - name: "Authorization"
        description: "JWT token "
        in: header
        required: true
        schema: 
          type: string
      - name: id
        in: path
        description: "ID użytkownika którego email chcemy zmienić"
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: 'Zmieniono email, ustawiono w bazie, że user nie jest aktywowany oraz wysłano maila z linkiem do weryfikacji'
        '404':
          description: 'Jeśli usera o danym id nie ma w bazie'
        '409':
          description: 'Jeśli hasło jest nieprawidłowe lub podany email jest już w bazie'
        '424':
          description: 'Jeśli usera o danym id nie ma w bazie'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        password:
          type: string
    APIAuthModel:
      type: object
      properties:
        idToken:
          type: string
      xml:
        name: APIAuthModel
    UserAuthModel:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      xml:
        name: User
    PasswordUpdateForm:
      type: object
      properties:
        email:
          type: string
        actualPassword:
          type: string
        newPassword:
          type: string
      xml:
        name: PasswordUpdateForm
