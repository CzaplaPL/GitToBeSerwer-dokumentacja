{
	"info": {
		"_postman_id": "831f7d4e-bf7d-4da2-a51f-63482dda41d7",
		"name": "User tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "signup (weak password)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Header Cause has value {weak password}\", () => {\r",
							"  pm.expect(pm.response.headers.get('Cause')).to.eql('weak password');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"user1@user.com\",\r\n    \"password\":\"se\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/signup",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "signup (bad email)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Header Cause has value {bad email}\", () => {\r",
							"  pm.expect(pm.response.headers.get('Cause')).to.eql('bad email');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"user2user.com\",\r\n    \"password\":\"User123!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/signup",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "signup (correct)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct signup\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"user@user.com\",\r\n    \"password\":\"User123!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/signup",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "signup (duplicate entry)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Email is duplicated\", function () {\r",
							"    pm.expect(pm.response.headers.get('Cause')).to.eql('duplicate entry');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"user@user.com\",\r\n    \"password\":\"User123!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/signup",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "login (correct)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Authorization header is present\", () => {\r",
							"  pm.response.to.have.header(\"Authorization\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"user@user.com\",\r\n    \"password\":\"User123!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/login",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "login (failed)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login failed\", () => {\r",
							"  pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"useruser.com\",\r\n    \"password\":\"User123!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/login",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user (user not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User not found\", () => {\r",
							"  pm.response.to.have.status(404);\r",
							"  pm.expect(pm.response.headers.get('Cause')).to.eql('user not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:8443/user/0",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user (user found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User found\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:8443/user/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user (user not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User not found\", () => {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://localhost:8443/user/0",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user (deleted)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User found and deleted\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://localhost:8443/user/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "signup (correct) Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct signup\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"user@user.com\",\r\n    \"password\":\"User123!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/signup",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "signup (correct) Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct signup\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"user123@user.com\",\r\n    \"password\":\"User123!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/signup",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "find user by email (found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User found\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.header(\"idUser\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:8443/user/search/user@user.com",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"search",
						"user@user.com"
					]
				}
			},
			"response": []
		},
		{
			"name": "find user by email (not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User not found\", () => {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:8443/user/search/u@user.com",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"search",
						"u@user.com"
					]
				}
			},
			"response": []
		},
		{
			"name": "password update (user not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User not found\", () => {\r",
							"    pm.response.to.have.status(404);\r",
							"    pm.expect(pm.response.headers.get('Cause')).to.eql('user not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"user@user.com\",\r\n    \"actualPassword\":\"User123!\",\r\n    \"newPassword\":\"User123!@\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/0/password-update",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"0",
						"password-update"
					]
				}
			},
			"response": []
		},
		{
			"name": "password update (bad password)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Bad password\", () => {\r",
							"    pm.response.to.have.status(409);\r",
							"    pm.expect(pm.response.headers.get('Cause')).to.eql('bad password');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"user@user.com\",\r\n    \"actualPassword\":\"User123\",\r\n    \"newPassword\":\"User123\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/2/password-update",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"2",
						"password-update"
					]
				}
			},
			"response": []
		},
		{
			"name": "password update (new password weak)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"New password weak\", () => {\r",
							"    pm.response.to.have.status(409);\r",
							"    pm.expect(pm.response.headers.get('Cause')).to.eql('new password weak');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"user@user.com\",\r\n    \"actualPassword\":\"User123!\",\r\n    \"newPassword\":\"User123\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/2/password-update",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"2",
						"password-update"
					]
				}
			},
			"response": []
		},
		{
			"name": "password update (correct)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Password changed\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"user@user.com\",\r\n    \"actualPassword\":\"User123!\",\r\n    \"newPassword\":\"User111!\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/2/password-update",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"2",
						"password-update"
					]
				}
			},
			"response": []
		},
		{
			"name": "remind password (correct)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Password sent\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://localhost:8443/user/remind-password?email=user123@user.com",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"remind-password"
					],
					"query": [
						{
							"key": "email",
							"value": "user123@user.com"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "remind password (user not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User not found\", () => {\r",
							"    pm.response.to.have.status(404);\r",
							"    pm.expect(pm.response.headers.get('Cause')).to.eql('user not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://localhost:8443/user/remind-password?email=u@user.com",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"remind-password"
					],
					"query": [
						{
							"key": "email",
							"value": "u@user.com"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "email update (correct)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Email updated\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"user1@user.com\",\r\n    \"password\": \"User111!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/2/email-update",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"2",
						"email-update"
					]
				}
			},
			"response": []
		},
		{
			"name": "email update (user not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User not found\", () => {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"user1@user.com\",\r\n    \"password\": \"User123!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/0/email-update",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"0",
						"email-update"
					]
				}
			},
			"response": []
		},
		{
			"name": "email update (wrong password)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Wrong password\", () => {\r",
							"    pm.response.to.have.status(409);\r",
							"    pm.expect(pm.response.headers.get('Cause')).to.eql('wrong password');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"user1@user.com\",\r\n    \"password\": \"User123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/2/email-update",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"2",
						"email-update"
					]
				}
			},
			"response": []
		},
		{
			"name": "email update (wrong email)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Wrong email\", () => {\r",
							"    pm.response.to.have.status(409);\r",
							"    pm.expect(pm.response.headers.get('Cause')).to.eql('wrong email');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"user1user.com\",\r\n    \"password\": \"User111!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/2/email-update",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"2",
						"email-update"
					]
				}
			},
			"response": []
		},
		{
			"name": "signup (correct) Copy 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct signup\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"user@user.com\",\r\n    \"password\":\"User123!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8443/user/signup",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "token verification (correct)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"New token in header\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"     pm.response.to.have.header(\"Authorization\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyQHVzZXIuY29tIiwiZXhwIjoxNjEzMjU5MTgwfQ.KFmWdRVXLOTyG5p_kOfp1p4BppTfWPdCm2gekP5SjYY",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://localhost:8443/user/token-verification",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"token-verification"
					]
				}
			},
			"response": []
		},
		{
			"name": "token verification (token is not valid)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Token is not valid\", () => {\r",
							"    pm.response.to.have.status(403);\r",
							"    pm.expect(pm.response.headers.get('Cause')).to.eql('token is not valid');\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyQHVzZXIuY29tIiwiZXhwIjoxNjEzMjU5MTgwfQ.KFmWdRVXLOTyG5p_kOfp1p4BppTfWPdCm2gekP5SjY",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://localhost:8443/user/token-verification",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"token-verification"
					]
				}
			},
			"response": []
		},
		{
			"name": "token verification (user not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User not found\", () => {\r",
							"    pm.response.to.have.status(403);\r",
							"    pm.expect(pm.response.headers.get('Cause')).to.eql('user not found');\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1OTk5c2VyQHVzZXIuY29tIiwiZXhwIjoxNjEzMjU5NTg2fQ.3Fhwz1qadxi3TCZ4gUDflB48ysvQDgv-Reyp6cxq79U",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://localhost:8443/user/token-verification",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8443",
					"path": [
						"user",
						"token-verification"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyQHVzZXIuY29tIiwiZXhwIjoxNjEzMTYyMDcwfQ.Gln-XRA2rqQM9IBYav5_I2m1xE4ywz5v1gNVCQkuj6Y",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "correctToken",
			"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyQHVzZXIuY29tIiwiZXhwIjoxNjEzMjk4ODU2fQ.KW_8Pml8lMJnpUVYmjVXb6iya5eTDE71-0NBuFHet3I"
		},
		{
			"key": "wrongToken",
			"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyQHVzZXIuY29tIiwiZXhwIjoxNjEzMjk4ODU2fQ.KW_8Pml8lMJnpUVYmjVXb6iya5eTDE71-0NBuFHet3"
		},
		{
			"key": "userNotFoundToken",
			"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1OTk5c2VyQHVzZXIuY29tIiwiZXhwIjoxNjEzMjU5NTg2fQ.3Fhwz1qadxi3TCZ4gUDflB48ysvQDgv-Reyp6cxq79U"
		}
	]
}